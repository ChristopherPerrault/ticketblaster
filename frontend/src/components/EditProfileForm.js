import React, { useEffect, useRef, useState } from "react";
import { useNavigate } from "react-router-dom";
import "./Profile.css";

import { Button, Typography, TextField, ButtonBase } from "@mui/material";

function EditProfilehtmlForm() {
  const TextStyle = {
    width: "200px",
    margin: "5px",
  };
  const idRef = useRef();
  const [email, setEmail] = React.useState("");
  const [password, setPassword] = React.useState("");
  const [firstName, setFirstName] = React.useState("");
  const [lastName, setLastName] = React.useState("");
  const [address, setAddress] = React.useState("");
  const [phoneNumber, setPhoneNumber] = React.useState("");
  const [creditCard, setCreditCard] = React.useState("");
  const [securityCode, setSecurityCode] = React.useState("");
  const [expDate, setExpDate] = React.useState(null);

  const navigate = useNavigate();

  //storage is set when user logs in
  const userId = sessionStorage.getItem("userId");

  /* this method is used to generate all data about the user and display it*/
  loadUserDetails(userId);

  async function handleSubmit(event) {
    console.log("Received update for user: " + userId);
    event.preventDefault();

    const editedPerson = {
      id: userId,
      email: email,
      password: password,
      firstName: firstName,
      lastName: lastName,
      address: address,
      phoneNumber: phoneNumber,
      creditCard: creditCard,
      securityCode: securityCode,
      expDate: expDate,
    };
    console.log(
      "Sending the following data to server: " + JSON.stringify(editedPerson)
    );

    // This will send a post request to update the data in the database.
    try {
      await fetch(`http://localhost:3001/users/${userId}`, {
        method: "POST",
        body: JSON.stringify(editedPerson),
        headers: {
          "Content-Type": "application/json",
        },
      }).then((response) => console.log("Response: " + response));
    } catch (err) {
      console.error(err);
    }
    var updateMsg =
      "Profile updated successfully!\nYou entered the following information:\n Email: " +
      editedPerson.email +
      "\n First Name: " +
      editedPerson.firstName +
      "\n Last Name: " +
      editedPerson.lastName +
      "\n Phone: " +
      editedPerson.phoneNumber +
      "\n Address: " +
      editedPerson.address + ".";
    alert(updateMsg);
    navigate("/");
  }
  function adminClick() {
    navigate("/admin");
  }

  return (
    <div>
      <form onSubmit={handleSubmit} className="profile-right-col">
        <Typography
          variant="h3"
          component="h3"
          style={{
            textDecoration: "underline",
            fontSize: "2em",
            marginBottom: "1rem",
          }}
        >
          Edit Account info
        </Typography>
        <div id="adminBoolean"></div>
        {/* The below element stores the id of the user, which is generated by @loadUserDetails below */}

        <div ref={idRef} className="hiddenId" style={{ display: "none" }}></div>

        <TextField
          style={TextStyle}
          type="text"
          id="email-input"
          label="Email Address"
          InputLabelProps={{ shrink: true }}
          variant="outlined"
          onChange={(e) => setEmail(e.target.value)}
        />

        {/*   <input type="text" ref={xRef} id="x" />*/}
        <br />
        <TextField
          style={TextStyle}
          type="password"
          id="pw-input"
          label="Password"
          InputLabelProps={{ shrink: true }}
          variant="outlined"
          onChange={(e) => setPassword(e.target.value)}
        />
        <br />
        <TextField
          style={TextStyle}
          type="text"
          id="fn-input"
          label="First Name"
          InputLabelProps={{ shrink: true }}
          variant="outlined"
          onChange={(e) => setFirstName(e.target.value)}
        />
        <br />
        <TextField
          style={TextStyle}
          type="text"
          id="ln-input"
          label="Last Name"
          InputLabelProps={{ shrink: true }}
          variant="outlined"
          onChange={(e) => setLastName(e.target.value)}
        />
        <br />
        <TextField
          style={TextStyle}
          type="text"
          id="adr-input"
          label="Address"
          InputLabelProps={{ shrink: true }}
          variant="outlined"
          onChange={(e) => setAddress(e.target.value)}
        />
        <br />
        <TextField
          style={TextStyle}
          type="text"
          id="phone-input"
          label="Phone Number"
          InputLabelProps={{ shrink: true }}
          variant="outlined"
          onChange={(e) => setPhoneNumber(e.target.value)}
        />

        <br />

        <TextField
          style={TextStyle}
          type="text"
          id="cc-input"
          label="Credit Card"
          InputLabelProps={{ shrink: true }}
          variant="outlined"
          onChange={(e) => setCreditCard(e.target.value)}
        />
        <br />
        <TextField
          style={TextStyle}
          type="text"
          id="sec-input"
          label="Security Code"
          InputLabelProps={{ shrink: true }}
          variant="outlined"
          onChange={(e) => setSecurityCode(e.target.value)}
        />

        <Button type="submit" variant="contained" style={{ marginLeft: "6%" }}>
          Update Info
        </Button>
        <br />

        <TextField
          style={TextStyle}
          type="date"
          id="exp-input"
          label="Expiry Date"
          InputLabelProps={{ shrink: true }}
          variant="outlined"
          onChange={(e) => setExpDate(e.target.value)}
        />

        <br />
      </form>

      <Button
        variant="contained"
        id="adminCheck"
        onClick={adminClick}
        style={{ marginLeft: "-17%", marginTop: "-20%" }}
      >
        ACCESS ADMIN DASHBOARD
      </Button>
    </div>
  );
}

export default EditProfilehtmlForm;

async function loadUserDetails(id) {
  const currentId = id;
  console.log("Loading user details..." + currentId);
  fetch(`http://localhost:3001/users/id/${currentId}`, {
    method: "GET",
    headers: {
      "Content-type": "application/json; charset=UTF-8",
    },
  })
    .then((data) => data.json())
    .then((json) => {
      console.log(json.isAdmin);
      {
        json.isAdmin
          ? (document.getElementById("adminCheck").style.display = "inline")
          : console.log(json.isAdmin + " false");
      }
      document.getElementById("email-input").placeholder = json.email;
      document.getElementById("fn-input").placeholder = json.firstName;
      document.getElementById("ln-input").placeholder = json.lastName;
      document.getElementById("phone-input").placeholder = json.phoneNumber;
      document.getElementById("adr-input").placeholder = json.address;
      document.getElementById("cc-input").placeholder = json.creditCard;
      document.getElementById("sec-input").placeholder = json.securityCode;
      document.getElementById("exp-input").placeholder = json.expDate;
    });
}
